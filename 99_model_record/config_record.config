nn_hd_info {
    model_info {
        act_info {
            leaky_relu {}
        }

        manual_network {neural_list:  [7, 21, 63, 189, 189, 189, 4]}
    }

    
    csv_info {

        train_csv_path: "./01_DATA/NTU_X_Axis_heat_compen/train_data.csv"
        test_csv_path:  "./01_DATA/NTU_X_Axis_heat_compen/test_data.csv"
        eva_csv_path:   "./01_DATA/NTU_X_Axis_heat_compen/eva_data.csv"

        feature_key: [
            # "T1_DELTA", "T2_DELTA", "T3_DELTA", "T4_DELTA", "T5_DELTA", "T6_DELTA", "T7_DELTA"
            "T1", "T2", "T3", "T4", "T5", "T6", "T7"
        ]
        
        # label_key: ["D_5_TEE", "D_39_TEE", "D_73_TEE", "D_107_TEE", "D_141_TEE", "D_175_TEE", "D_209_TEE", 
        #     "D_243_TEE", "D_277_TEE", "D_311_TEE", "D_345_TEE", "D_379_TEE", "D_413_TEE", "D_447_TEE", "D_481_TEE", "D_515_TEE"]

        label_key: [
            "D_5_TEE", "D_175_TEE", "D_345_TEE", "D_515_TEE"
            ]

        random_seed: 99
        test_ratio: 0.1
        batch_size: -1

    }

    input_info {
        std_feature:        false
        std_label:          false
        mv_label:           false
        mv_temp:            false
        mv_coef:            30
        shuffle_bool:       true
        batch_offset_bool:  false
    }

    train_info {
        max_step: 10000
        train_batch: 300

        lr_info {
            init_lr: 0.0005

            exp_decay_info{
                decay_steps: 3000
                decay_rate:  0.9
            }

            adam_info {
                beta_1: 0.9
                beta_2: 0.9
                epsilon: 1e-05
            }
        }

        regularize_info {
            method: "l2"
            ratio: 0.1
        }

        drop_out_rate: 0.2
        z_sc_learnable_b: false
    }

    eva_info {
        step_to_eva: 1000
        batch_size: -1
    }

    test_info {
        step_to_test: 2000
        batch_size: -1
    }

    save_info {
        ckpt_path: "./99_model_record/"

        # ckpt_floder: "3-NN_TEE_TF-2-10-1-FLOAT_IN_OUT"
        
        ckpt_head: "model.ckpt"
    }

}